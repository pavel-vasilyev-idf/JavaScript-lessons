const path = require('path');

module.exports = {
  
  entry: './src/index.js', //установка точки входа
  output: { //установка точки выхода
    filename: 'dev-bundle.js', //название нашего файла
    path: path.resolve(__dirname, './dist'), //папка, куда хотим установить наш js(собрать наш проект). Но, чтобы вебпак правильно нашел этот путь, нужно установить доп.плагин - "Path"(выше подключаем в переменную) и прописываем path.resolve
  },
  mode: 'development', //модификатор итогового файла
  devServer: { //прописываем последним, после module, который ниже
    open: true, 
    port: 8080, //можно любой, хоть 3000
    hot: true,
    writeToDisk: true //файл создаваться на диске не будет, только в памяти будет сохраняться(то есть в bundle не будет создаваться), а если хотим все-таки его создание, то меняем на true и filename изменит на dev-bundle.js> Но! Важно! Чтобы сервер запустился, то в файое package.json допишем у скрипта dev дополнительный параметр "server"

  },
  module: { //набор правил в виде массива
    rules: [
      {
        test: /\.js$/, //берем все файлы js
        use: { //используем следующие опции
          loader: 'babel-loader',
          options: { //опции бабеля или пресеты(обновляются постоянно)
            presets: ['@babel/env'] //пресеты
          },
        },
        exclude: /node-modules/,
      }
    // теперь устанавливаем сам babel(на сайте вебпака в документации есть babel-loader в разделе loader) - через терминал (npm install -D babel-loader @babel/core @babel/preset-env) и пишем npm run build (собираем)
    ]
  }

  // далее меняем в стандартном конфиге script на команду "build"

  //После настройка babel(он нужен для того, чтобы все скрипты работали во всех браузерах) - часть настроек выше в "loader и options"

  //далее разделяем наш конфиг файла на 2: продакшн и девелопмент конфига 

  //в package.json соответственно дописываем в скрипт какой именно из этих двух файлов будут собирать прод, а какой дев

  //Установим webpack-dev-server для того, чтобы проект(bundle) собирался и автоматически обновлялся в браузере. Снова на сайте вебпака во вкладке configuration и найдем раздел devServer, переходил по первой же ссылки на гит и оттуда берем команду установки (npm install webpack-dev-server --save-dev)
        //Либо
  //Снова на сайте вебпака во вкладке Guides в разделе Development найдем using-webpack-dev-server

  //после установки сервера прописываем в конфиге к примеру после mode: 'development'
};